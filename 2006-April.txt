From lamblinp at iro.umontreal.ca  Wed Apr 26 12:24:03 2006
From: lamblinp at iro.umontreal.ca (Pascal Lamblin)
Date: Wed, 26 Apr 2006 12:24:03 +0200
Subject: [Plearn-core] Aide de PLearn
Message-ID: <20060426102403.GA666@pig.zood.org>

Salut les gens,

j'ai deux probl?mes lorsque j'essaie de r?g?n?rer la documentation de
PLearn, en tapant simplement ? make ? dans PLearn/doc/.

Le premier, c'est que le make s'arr?te sur une erreur apr?s avoir
g?n?rer les ? guides ? en pdf, mais vu qu'il les g?n?re correctement, je
penche pour un probl?me dans le makefile lui-m?me, je jetterai un coup
d'oeil.

Le deuxi?me arrive apr?s, si je relance ? make ?, pendant la g?n?ration
de la documentation des modules python. J'ai coll? les messages d'erreur
qui persistent apr?s plusieurs appels ? make ici :
http://pastebin.com/682639

Autre chose : je ne sais pas si du code (par exemple dans la nouvelle
interface graphique) utilise la commande ? htmlhelp ?, mais sachant que
pour l'utiliser il faut un objet HTMLHelpConfig, est-ce que ?a ne serait
pas plus simple de mettre le code dans cette classe, d'impl?menter
HTMLHelpConfig.run(), pour pouvoir lancer ? plearn html_config.plearn ?
au lieu de ? plearn htmlhelp html_config.plearn ?, et de supprimer cette
commande ?

Vous en pensez quoi ?
-- 
Pascal


From chapados at apstat.com  Wed Apr 26 15:21:26 2006
From: chapados at apstat.com (Nicolas Chapados)
Date: Wed, 26 Apr 2006 09:21:26 -0400
Subject: [Plearn-core] Aide de PLearn
In-Reply-To: <20060426102403.GA666@pig.zood.org>
References: <20060426102403.GA666@pig.zood.org>
Message-ID: <444F73D6.2080903@apstat.com>

Pour ton premier point, je ne sais pas.

Pour ton second, je peux expliquer les erreurs suivantes:

   1.
      Error importing 'plearn.plide.plide': No module named scintilla
   2.
      ..
   3.
      Error importing 'plearn.plide.plide_tabs': No module named scintilla

qui sont caus?es par une non-installation de scintilla.  Je vais faire 
sous peu le set-up de cette chose au DIRO pour que vous puissiez y avoir 
acc?s.

Pour le troisi?me, en effet Plide utilise la commande htmlhelp, mais 
g?n?re de fa?on interne l'objet HTMLHelpConfig, donc ce dernier n'a pas 
besoin d'?tre sp?cifi? s?par?ment.  Quant ? ton id?e de supprimer la 
commande pour en faire une classe, c'est une bonne id?e.  Avise-moi si 
jamais tu le fais car Plide d?pend de ce code.

    + Nicolas


Pascal Lamblin wrote:
> Salut les gens,
>
> j'ai deux probl?mes lorsque j'essaie de r?g?n?rer la documentation de
> PLearn, en tapant simplement ? make ? dans PLearn/doc/.
>
> Le premier, c'est que le make s'arr?te sur une erreur apr?s avoir
> g?n?rer les ? guides ? en pdf, mais vu qu'il les g?n?re correctement, je
> penche pour un probl?me dans le makefile lui-m?me, je jetterai un coup
> d'oeil.
>
> Le deuxi?me arrive apr?s, si je relance ? make ?, pendant la g?n?ration
> de la documentation des modules python. J'ai coll? les messages d'erreur
> qui persistent apr?s plusieurs appels ? make ici :
> http://pastebin.com/682639
>
> Autre chose : je ne sais pas si du code (par exemple dans la nouvelle
> interface graphique) utilise la commande ? htmlhelp ?, mais sachant que
> pour l'utiliser il faut un objet HTMLHelpConfig, est-ce que ?a ne serait
> pas plus simple de mettre le code dans cette classe, d'impl?menter
> HTMLHelpConfig.run(), pour pouvoir lancer ? plearn html_config.plearn ?
> au lieu de ? plearn htmlhelp html_config.plearn ?, et de supprimer cette
> commande ?
>
> Vous en pensez quoi ?
>   

-- 
Nicolas Chapados, M.Sc.
ApSTAT Technologies Inc.
www.apstat.com



From lamblinp at iro.umontreal.ca  Wed Apr 26 19:38:30 2006
From: lamblinp at iro.umontreal.ca (Pascal Lamblin)
Date: Wed, 26 Apr 2006 19:38:30 +0200
Subject: [Plearn-core] Aide de PLearn
In-Reply-To: <444F73D6.2080903@apstat.com>
References: <20060426102403.GA666@pig.zood.org> <444F73D6.2080903@apstat.com>
Message-ID: <20060426173830.GA2670@pig.zood.org>

On Wed, Apr 26, 2006, Nicolas Chapados wrote:
> Pour ton second, je peux expliquer les erreurs suivantes:
> 
>   1.
>      Error importing 'plearn.plide.plide': No module named scintilla
>   2.
>      ..
>   3.
>      Error importing 'plearn.plide.plide_tabs': No module named scintilla
> 
> qui sont caus?es par une non-installation de scintilla.  Je vais faire 
> sous peu le set-up de cette chose au DIRO pour que vous puissiez y avoir 
> acc?s.

OK, merci !

Mais je ne peux m'emp?cher de penser que l'erreur :
  File "/u/lamblinp/code/PLearn/python_modules/plearn/pyplearn/tutorial_stuff/tuto_complex_scheme.py",
line 1318, in ?
    from apstat.finance.pyplearn import *
ImportError: No module named apstat.finance.pyplearn

a quelque chose ? voir avec apstat...

> Pour le troisi?me, en effet Plide utilise la commande htmlhelp, mais 
> g?n?re de fa?on interne l'objet HTMLHelpConfig, donc ce dernier n'a pas 
> besoin d'?tre sp?cifi? s?par?ment.  Quant ? ton id?e de supprimer la 
> commande pour en faire une classe, c'est une bonne id?e.  Avise-moi si 
> jamais tu le fais car Plide d?pend de ce code.

OK. Si je le fais, j'essaierai de changer ce que je peux dans Plide
aussi, et je vous tiendrai au courant.

? plus,
-- 
Pascal


From lamblinp at iro.umontreal.ca  Thu Apr 27 00:43:01 2006
From: lamblinp at iro.umontreal.ca (Pascal Lamblin)
Date: Thu, 27 Apr 2006 00:43:01 +0200
Subject: [Plearn-core] Aide de PLearn
In-Reply-To: <20060426173830.GA2670@pig.zood.org>
References: <20060426102403.GA666@pig.zood.org> <444F73D6.2080903@apstat.com> <20060426173830.GA2670@pig.zood.org>
Message-ID: <20060426224301.GA5470@pig.zood.org>

On Wed, Apr 26, 2006, Pascal Lamblin wrote:
> [...]

En essayant de compiler la doc des modules python sur une machine 64
bits, je suis tomb? sur un autre probl?me, que j'ai ?galement reproduit
sur 32 bits au lisa, pour le module plearn.maths.StatsCollector :

auparavant, ?a faisait :
lamblinp at lsom ~/code/PLearn/doc% epydoc --debug --html --output ./python_modules_html /u/lamblinp/code/PLearn/python_modules/plearn
Importing 61 modules.
  [ 1/61] Importing plearn
  [ 2/61] Importing plearn.math
  [ 3/61] Importing plearn.math.Statistics
  [ 4/61] Importing plearn.math.StatsCollector
Error importing 'plearn.math.StatsCollector': No module named fpconst
  [ 5/61] Importing plearn.math.random

et ?a continuait, ensuite il laissait tomber le module
plearn.maths.StatsCollector.

J'ai constat? que fpconst existait sur les machines 64 bits, je l'ai
rajout? dans le chemin des 32 bits, et maintenant ?a donne :

lamblinp at lsom ~/code/PLearn/doc% epydoc --debug --html --output ./python_modules_html /u/lamblinp/code/PLearn/python_modules/plearn

Importing 61 modules.
  [ 1/61] Importing plearn
  [ 2/61] Importing plearn.math
  [ 3/61] Importing plearn.math.Statistics
  [ 4/61] Importing plearn.math.StatsCollector
  [ 5/61] Importing plearn.math.random

et ?a continue
[...]

  [ 4/55] Building docs for plearn.math.StatsCollector
    Building docs for plearn.math.StatsCollector
Traceback (most recent call last):
  File "/u/lisa/local/linux-i686/bin/epydoc", line 8, in ?
    cli()
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/cli.py",
line 110, in cli
    docmap = _make_docmap(modules, options)
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/cli.py",
line 483, in _make_docmap
    try: d.add(module)
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/objdoc.py",
line 2954, in add
    self._add(objID)
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/objdoc.py",
line 2961, in _add
    self.add_one(objID)
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/objdoc.py",
line 2884, in add_one
    self.data[objID] = ModuleDoc(objID, self._verbosity)
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/objdoc.py",
line 1168, in __init__
    vuid = make_uid(val, self._uid, field)
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/uid.py",
line 781, in make_uid
    uid = ObjectUID(object)
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/uid.py",
line 418, in __init__
    name = self._findname()
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/uid.py",
line 509, in _findname
    return '%s.%s' % (self.module(), objname)
  File "/u/lisa/local/linux-i686/lib/python2.2/site-packages/epydoc/uid.py",
line 585, in module
    if (self._module is not None and
  File "/u/lisa/local/linux-i386/lib/python2.4/site-packages/numarray/ma/MA.py",
line 1196, in __eq__
    return equal(self,other)
  File "/u/lisa/local/linux-i386/lib/python2.4/site-packages/numarray/ma/MA.py",
line 418, in __call__
    d2 = filled(b, self.filly)
  File "/u/lisa/local/linux-i386/lib/python2.4/site-packages/numarray/ma/MA.py",
line 230, in filled
    return Numeric.array(a)
  File "/u/lisa/local/linux-i386/lib/python2.4/site-packages/numarray/numarraycore.py",
line 366, in array
    a=sequence.__array__(type)
TypeError: unbound method __array__() must be called with MaskedScalar
instance as first argument (got NoneType instance instead)
zsh: exit 1     epydoc --debug --html --output ./python_modules_html

Si jamais il y a des python-gurus ? l'?coute et qu'ils comprennent ce
qu'il se passe, j'aimerais bien essayer de corriger le probl?me. S'il
faut changer l'installation locale de modules python, c'est faisable,
mais je n'ai pas envie de perdre du temps ? essayer plein d'affaires.

Merci de votre aide,
-- 
Pascal


From lamblinp at iro.umontreal.ca  Thu Apr 27 20:11:51 2006
From: lamblinp at iro.umontreal.ca (Pascal Lamblin)
Date: Thu, 27 Apr 2006 20:11:51 +0200
Subject: [Plearn-core] pymake et #ifdef
Message-ID: <20060427181151.GA19137@pig.zood.org>

Salut encore,

j'ai remarqu? dans le graphe de d?pendances g?n?r? par pymake
-dependency que pymake va consid?rer que les headers inclus dans un
#ifdef sont toujours inclus.

?a donne par exemple que plerror.cc d?pend de PLMPI.h, qui lui-m?me
d?pend de Mat.h et de tout un bazar.

Est-ce que certains ont d?j? tent? d'am?liorer ?a, et trouv? que c'?tait
impossible, ou que ?a ne valait pas le coup, ou est-ce que c'est en
cours ? Si vous avez des r?f?rences, ou connaissances que des outils
existants font d?j? ?a, je suis aussi preneur.

? plus,
-- 
Pascal


From lamblinp at iro.umontreal.ca  Thu Apr 27 20:47:29 2006
From: lamblinp at iro.umontreal.ca (Pascal Lamblin)
Date: Thu, 27 Apr 2006 20:47:29 +0200
Subject: [Plearn-core] pymake et #ifdef
In-Reply-To: <20060427181151.GA19137@pig.zood.org>
References: <20060427181151.GA19137@pig.zood.org>
Message-ID: <20060427184728.GA19359@pig.zood.org>

On Thu, Apr 27, 2006, Pascal Lamblin wrote:
> j'ai remarqu? dans le graphe de d?pendances g?n?r? par pymake
> -dependency que pymake va consid?rer que les headers inclus dans un
> #ifdef sont toujours inclus.

Une id?e (un peu trou?e) :
sachant que pymake conna?t au moment o? on le lance un certain nombre de
flags qui font ?tre pass?s au compilateur (genre "-DDEBUG",
"-DUSING_MPI=0", etc.), il pourrait les prendre en compte, et prendre en
compte leur valeur, pendant le parsing de la source.

C'est vrai que ?a ne prendrait pas en compte les #define rajout?s ? la
main, mais est-ce qu'il y en a beaucoup dans PLearn ? Et est-ce qu'il y
en a beaucoup qui encadrent des #include ?

-- 
Pascal


From chapados at apstat.com  Thu Apr 27 20:52:00 2006
From: chapados at apstat.com (Nicolas Chapados)
Date: Thu, 27 Apr 2006 14:52:00 -0400
Subject: [Plearn-core] pymake et #ifdef
In-Reply-To: <20060427181151.GA19137@pig.zood.org>
References: <20060427181151.GA19137@pig.zood.org>
Message-ID: <445112D0.1000704@apstat.com>

Il faudrait peut-?tre passer le source ?-travers CPP avant que le code 
de pymake ne l'inspecte?  On peut r?cup?rer l'identit? des fichiers 
inclus en regardant les directives #file plut?t que #include...

?a devrait ?tre un changement simple, en principe...

    + Nicolas


Pascal Lamblin wrote:
> Salut encore,
>
> j'ai remarqu? dans le graphe de d?pendances g?n?r? par pymake
> -dependency que pymake va consid?rer que les headers inclus dans un
> #ifdef sont toujours inclus.
>
> ?a donne par exemple que plerror.cc d?pend de PLMPI.h, qui lui-m?me
> d?pend de Mat.h et de tout un bazar.
>
> Est-ce que certains ont d?j? tent? d'am?liorer ?a, et trouv? que c'?tait
> impossible, ou que ?a ne valait pas le coup, ou est-ce que c'est en
> cours ? Si vous avez des r?f?rences, ou connaissances que des outils
> existants font d?j? ?a, je suis aussi preneur.
>
> ? plus,
>   

-- 
Nicolas Chapados, M.Sc.
ApSTAT Technologies Inc.
www.apstat.com



From pascal at apstat.com  Thu Apr 27 21:01:22 2006
From: pascal at apstat.com (Pascal Vincent)
Date: Thu, 27 Apr 2006 15:01:22 -0400
Subject: [Plearn-core] pymake et #ifdef
In-Reply-To: <20060427181151.GA19137@pig.zood.org>
References: <20060427181151.GA19137@pig.zood.org>
Message-ID: <44511502.1030400@apstat.com>

Pascal Lamblin wrote:
> Salut encore,
>
> j'ai remarqu? dans le graphe de d?pendances g?n?r? par pymake
> -dependency que pymake va consid?rer que les headers inclus dans un
> #ifdef sont toujours inclus.
>   
C'est un probl?me connu. pymake fait unparsing rudimentaire pour ignorer 
les commentaires C++, mais les #ifdef c'est plus compliqu?.
On ne veut pas appeler le pr?processeur de gcc sur chaque fichier 
examin?, car je pense que ?a serait trop long (en plus il expandrait les 
#include).
Une gestion compl?te du macro-processing C au niveau de pymake ne me 
parait pas n?cessaire ni forc?ment souhaitable. Mais on peut sans doute 
assez facilement modifier le script pour g?rer les cas de #ifdef simples 
tels que celui que tu d?cris.
> ?a donne par exemple que plerror.cc d?pend de PLMPI.h, qui lui-m?me
> d?pend de Mat.h et de tout un bazar.
>
> Est-ce que certains ont d?j? tent? d'am?liorer ?a, et trouv? que c'?tait
> impossible, ou que ?a ne valait pas le coup, ou est-ce que c'est en
> cours ? Si vous avez des r?f?rences, ou connaissances que des outils
> existants font d?j? ?a, je suis aussi preneur.
>
> ? plus,
>   


-- 
Pascal Vincent
Directeur Technique, ApSTAT Technologies Inc.
Tel: (514) 343-9119  #219
http://www.apstat.com



From pascal at apstat.com  Thu Apr 27 21:07:54 2006
From: pascal at apstat.com (Pascal Vincent)
Date: Thu, 27 Apr 2006 15:07:54 -0400
Subject: [Plearn-core] pymake et #ifdef
In-Reply-To: <445112D0.1000704@apstat.com>
References: <20060427181151.GA19137@pig.zood.org> <445112D0.1000704@apstat.com>
Message-ID: <4451168A.1000208@apstat.com>

Nicolas Chapados wrote:
> Il faudrait peut-?tre passer le source ?-travers CPP avant que le code 
> de pymake ne l'inspecte?  On peut r?cup?rer l'identit? des fichiers 
> inclus en regardant les directives #file plut?t que #include...
Mon inqui?tude avec cette approche, comme je le mentionne dans mon 
pr?c?dent message, concerne le temps ajout? de l'appel de CPP pour 
*chaque* fichier examin? pour l'?tablissement du graphe de d?pendances. 
C'est pourquoi je privil?gie qqch de plus "light" comme ce que sugg?re 
Pascal L. Mais c'est ouvert ? discussion.

-- 
Pascal Vincent
Directeur Technique, ApSTAT Technologies Inc.
Tel: (514) 343-9119  #219
http://www.apstat.com



From chapados at apstat.com  Thu Apr 27 22:26:50 2006
From: chapados at apstat.com (Nicolas Chapados)
Date: Thu, 27 Apr 2006 16:26:50 -0400
Subject: [Plearn-core] pymake et #ifdef
In-Reply-To: <4451168A.1000208@apstat.com>
References: <20060427181151.GA19137@pig.zood.org> <445112D0.1000704@apstat.com> <4451168A.1000208@apstat.com>
Message-ID: <4451290A.4000507@apstat.com>

Non, tu n'as qu'? le faire sur le fichier top-level.  Tu r?cup?res 
ensuite le graphe de d?pendances en analysant l'output de cpp sur ce 
fichier seulement.

Pascal Vincent wrote:
> Nicolas Chapados wrote:
>> Il faudrait peut-?tre passer le source ?-travers CPP avant que le 
>> code de pymake ne l'inspecte?  On peut r?cup?rer l'identit? des 
>> fichiers inclus en regardant les directives #file plut?t que #include...
> Mon inqui?tude avec cette approche, comme je le mentionne dans mon 
> pr?c?dent message, concerne le temps ajout? de l'appel de CPP pour 
> *chaque* fichier examin? pour l'?tablissement du graphe de 
> d?pendances. C'est pourquoi je privil?gie qqch de plus "light" comme 
> ce que sugg?re Pascal L. Mais c'est ouvert ? discussion.
>

-- 
Nicolas Chapados, M.Sc.
ApSTAT Technologies Inc.
www.apstat.com



From chapados at apstat.com  Thu Apr 27 22:36:20 2006
From: chapados at apstat.com (Nicolas Chapados)
Date: Thu, 27 Apr 2006 16:36:20 -0400
Subject: [Plearn-core] pymake et #ifdef
In-Reply-To: <4451290A.4000507@apstat.com>
References: <20060427181151.GA19137@pig.zood.org> <445112D0.1000704@apstat.com> <4451168A.1000208@apstat.com> <4451290A.4000507@apstat.com>
Message-ID: <44512B44.7070101@apstat.com>

Oublie ce que je viens de dire, c'est un peu stupide.  ?videmment il 
faut passer cpp sur tous les .cc

Nicolas Chapados wrote:
> Non, tu n'as qu'? le faire sur le fichier top-level.  Tu r?cup?res 
> ensuite le graphe de d?pendances en analysant l'output de cpp sur ce 
> fichier seulement.
>
> Pascal Vincent wrote:
>> Nicolas Chapados wrote:
>>> Il faudrait peut-?tre passer le source ?-travers CPP avant que le 
>>> code de pymake ne l'inspecte?  On peut r?cup?rer l'identit? des 
>>> fichiers inclus en regardant les directives #file plut?t que 
>>> #include...
>> Mon inqui?tude avec cette approche, comme je le mentionne dans mon 
>> pr?c?dent message, concerne le temps ajout? de l'appel de CPP pour 
>> *chaque* fichier examin? pour l'?tablissement du graphe de 
>> d?pendances. C'est pourquoi je privil?gie qqch de plus "light" comme 
>> ce que sugg?re Pascal L. Mais c'est ouvert ? discussion.
>>
>

-- 
Nicolas Chapados, M.Sc.
ApSTAT Technologies Inc.
www.apstat.com



From delallea at iro.umontreal.ca  Thu Apr 27 22:39:13 2006
From: delallea at iro.umontreal.ca (Olivier Delalleau)
Date: Thu, 27 Apr 2006 16:39:13 -0400
Subject: [Plearn-core] pymake et #ifdef
In-Reply-To: <44512B44.7070101@apstat.com>
References: <20060427181151.GA19137@pig.zood.org> <445112D0.1000704@apstat.com> <4451168A.1000208@apstat.com> <4451290A.4000507@apstat.com> <44512B44.7070101@apstat.com>
Message-ID: <20060427203911.GA16265@opale.iro.umontreal.ca>

Malheureusement pour toi, cet email sera conserve jusqu'a la fin des
temps dans les archives de BerliOS.

On 27 Apr 2006, Nicolas Chapados wrote:
> Oublie ce que je viens de dire, c'est un peu stupide.  ?videmment il 
> faut passer cpp sur tous les .cc
> 
> Nicolas Chapados wrote:
> >Non, tu n'as qu'? le faire sur le fichier top-level.  Tu r?cup?res 
> >ensuite le graphe de d?pendances en analysant l'output de cpp sur ce 
> >fichier seulement.
> >
> >Pascal Vincent wrote:
> >>Nicolas Chapados wrote:
> >>>Il faudrait peut-?tre passer le source ?-travers CPP avant que le 
> >>>code de pymake ne l'inspecte?  On peut r?cup?rer l'identit? des 
> >>>fichiers inclus en regardant les directives #file plut?t que 
> >>>#include...
> >>Mon inqui?tude avec cette approche, comme je le mentionne dans mon 
> >>pr?c?dent message, concerne le temps ajout? de l'appel de CPP pour 
> >>*chaque* fichier examin? pour l'?tablissement du graphe de 
> >>d?pendances. C'est pourquoi je privil?gie qqch de plus "light" comme 
> >>ce que sugg?re Pascal L. Mais c'est ouvert ? discussion.
> >>
> >
> 


